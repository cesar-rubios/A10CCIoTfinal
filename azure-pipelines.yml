# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  displayName: "Construir Aplicación"
  jobs:
  - job: BuildJob
    steps:
    - script: dotnet build simulated-device-2.csproj --configuration $(buildConfiguration)
      displayName: 'Compilar proyecto'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.SourcesDirectory)'   # O ajusta esta ruta al directorio que necesites
        artifact: dotnet-app
      displayName: 'Publicar artefacto'

- stage: Deploy
  displayName: "Desplegar en VM Ubuntu"
  dependsOn: Build
  jobs:
  - job: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - download: current
      artifact: dotnet-app

    - task: CopyFilesOverSSH@0
      inputs:
        sshEndpoint: 'DevicesSimulatorSSH'  
        sourceFolder: '$(Pipeline.Workspace)/dotnet-app'
        targetFolder: '/home/azureuser/app'
      displayName: 'Copiar artefacto a la VM'

    - task: SSH@0
      inputs:
        sshEndpoint: 'DevicesSimulatorSSH'
        runOptions: 'commands'
        commands: |
          # sudo systemctl stop myapp || echo "myapp.service no está cargado, continuando..."
          cd /home/azureuser/app
          nohup dotnet MyApp.dll > output.log 2>&1 &
      displayName: 'Ejecutar la aplicación en la VM'